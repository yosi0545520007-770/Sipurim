{"version":3,"file":"locale.js","sources":["../../../src/locale.ts"],"sourcesContent":["import {hebrewStripNikkud} from './hebrewStripNikkud';\nimport poAshkenazi from './ashkenazi.po';\nimport poHe from './he.po';\n\nexport interface Headers {\n  'content-type'?: string;\n  'plural-forms'?: string;\n}\n\nexport type StringArrayMap = Record<string, string[]>;\n\nexport interface LocaleData {\n  headers: Headers;\n  contexts: {[key: string]: StringArrayMap};\n}\n\nconst noopLocale: LocaleData = {\n  headers: {'plural-forms': 'nplurals=2; plural=(n!=1);'},\n  contexts: {'': {}},\n} as const;\n\ninterface StringProps {\n  [key: string]: string;\n}\n\nconst alias: StringProps = {\n  h: 'he',\n  a: 'ashkenazi',\n  s: 'en',\n  '': 'en',\n} as const;\n\n/** @private */\nconst locales = new Map<string, StringArrayMap>();\n/** @private */\nlet activeLocale: StringArrayMap;\n/** @private */\nlet activeName: string;\n\n/** @private */\nfunction getEnOrdinal(n: number): string {\n  const s = ['th', 'st', 'nd', 'rd'];\n  const v = n % 100;\n  return n + (s[(v - 20) % 10] || s[v] || s[0]);\n}\n\n/** @private */\nfunction checkLocale(locale: string): string {\n  if (typeof locale !== 'string') {\n    throw new TypeError(`Invalid locale name: ${locale}`);\n  }\n  return locale.toLowerCase();\n}\n\n/** @private */\nfunction getExistingLocale(locale: string): StringArrayMap {\n  const locale1 = checkLocale(locale);\n  const loc = locales.get(locale1);\n  if (!loc) {\n    throw new RangeError(`Locale '${locale}' not found`);\n  }\n  return loc;\n}\n\n/**\n * A locale in Hebcal is used for translations/transliterations of\n * holidays. `@hebcal/hdate` supports four locales by default\n * * `en` - default, Sephardic transliterations (e.g. \"Shabbat\")\n * * `ashkenazi` - Ashkenazi transliterations (e.g. \"Shabbos\")\n * * `he` - Hebrew (e.g. \"שַׁבָּת\")\n * * `he-x-NoNikud` - Hebrew without nikud (e.g. \"שבת\")\n */\nexport class Locale {\n  /**\n   * Returns translation only if `locale` offers a non-empty translation for `id`.\n   * Otherwise, returns `undefined`.\n   * @param id Message ID to translate\n   * @param [locale] Optional locale name (i.e: `'he'`, `'fr'`). Defaults to active locale.\n   */\n  static lookupTranslation(id: string, locale?: string): string | undefined {\n    const loc =\n      (typeof locale === 'string' && locales.get(locale.toLowerCase())) ||\n      activeLocale;\n    const array = loc[id];\n    if (array?.length && array[0].length) {\n      return array[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * By default, if no translation was found, returns `id`.\n   * @param id Message ID to translate\n   * @param [locale] Optional locale name (i.e: `'he'`, `'fr'`). Defaults to active locale.\n   */\n  static gettext(id: string, locale?: string): string {\n    const text = this.lookupTranslation(id, locale);\n    if (typeof text === 'undefined') {\n      return id;\n    }\n    return text;\n  }\n\n  /**\n   * Register locale translations.\n   * @param locale Locale name (i.e.: `'he'`, `'fr'`)\n   * @param data parsed data from a `.po` file.\n   */\n  static addLocale(locale: string, data: LocaleData): void {\n    locale = checkLocale(locale);\n    if (\n      typeof data.contexts !== 'object' ||\n      typeof data.contexts[''] !== 'object'\n    ) {\n      throw new TypeError(`Locale '${locale}' invalid compact format`);\n    }\n    locales.set(locale, data.contexts['']);\n  }\n\n  /**\n   * Adds a translation to `locale`, replacing any previous translation.\n   * @param locale Locale name (i.e: `'he'`, `'fr'`).\n   * @param id Message ID to translate\n   * @param translation Translation text\n   */\n  static addTranslation(\n    locale: string,\n    id: string,\n    translation: string | string[]\n  ): void {\n    const loc = getExistingLocale(locale);\n    if (typeof id !== 'string' || id.length === 0) {\n      throw new TypeError(`Invalid id string: ${id}`);\n    }\n    const isArray = Array.isArray(translation);\n    if (isArray) {\n      const t0 = translation[0];\n      if (typeof t0 !== 'string' || t0.length === 0) {\n        throw new TypeError(`Invalid translation array: ${translation}`);\n      }\n    } else if (typeof translation !== 'string') {\n      throw new TypeError(`Invalid translation string: ${translation}`);\n    }\n    loc[id] = isArray ? translation : [translation];\n  }\n  /**\n   * Adds multiple translations to `locale`, replacing any previous translations.\n   * @param locale Locale name (i.e: `'he'`, `'fr'`).\n   * @param data parsed data from a `.po` file.\n   */\n  static addTranslations(locale: string, data: LocaleData) {\n    const loc = getExistingLocale(locale);\n    if (\n      typeof data.contexts !== 'object' ||\n      typeof data.contexts[''] !== 'object'\n    ) {\n      throw new TypeError(`Locale '${locale}' invalid compact format`);\n    }\n    const ctx = data.contexts[''];\n    Object.assign(loc, ctx);\n  }\n  /**\n   * Activates a locale. Throws an error if the locale has not been previously added.\n   * After setting the locale to be used, all strings marked for translations\n   * will be represented by the corresponding translation in the specified locale.\n   * @param locale Locale name (i.e: `'he'`, `'fr'`)\n   * @deprecated\n   */\n  static useLocale(locale: string): StringArrayMap {\n    const locale0 = checkLocale(locale);\n    const obj = getExistingLocale(locale0);\n    activeName = alias[locale0] || locale0;\n    activeLocale = obj;\n    return activeLocale;\n  }\n\n  /**\n   * Returns the name of the active locale (i.e. 'he', 'ashkenazi', 'fr')\n   * @deprecated\n   */\n  static getLocaleName(): string {\n    return activeName;\n  }\n\n  /**\n   * Returns the names of registered locales\n   */\n  static getLocaleNames(): string[] {\n    const keys = Array.from(locales.keys());\n    return keys.sort((a, b) => a.localeCompare(b));\n  }\n\n  /**\n   * Renders a number in ordinal, such as 1st, 2nd or 3rd\n   * @param [locale] Optional locale name (i.e: `'he'`, `'fr'`). Defaults to active locale.\n   */\n  static ordinal(n: number, locale?: string): string {\n    const locale1 = locale?.toLowerCase();\n    const locale0 = locale1 || activeName;\n    if (!locale0) {\n      return getEnOrdinal(n);\n    }\n    switch (locale0) {\n      case 'en':\n      case 's':\n      case 'a':\n        return getEnOrdinal(n);\n      case 'es':\n        return n + 'º';\n      case 'h':\n      case 'he':\n      case 'he-x-nonikud':\n        return String(n);\n      default:\n        break;\n    }\n    if (locale0.startsWith('ashkenazi')) {\n      return getEnOrdinal(n);\n    }\n    return n + '.';\n  }\n\n  /**\n   * Removes nekudot from Hebrew string\n   */\n  static hebrewStripNikkud(str: string): string {\n    return hebrewStripNikkud(str);\n  }\n}\n\nLocale.addLocale('en', noopLocale);\nLocale.addLocale('s', noopLocale);\nLocale.addLocale('', noopLocale);\nLocale.useLocale('en');\n\n/* Ashkenazic transliterations */\nLocale.addLocale('ashkenazi', poAshkenazi);\nLocale.addLocale('a', poAshkenazi);\n\n/* Hebrew with nikkud */\nLocale.addLocale('he', poHe);\nLocale.addLocale('h', poHe);\n\n/* Hebrew without nikkud */\nconst heStrs = poHe.contexts[''];\nconst heNoNikud: StringArrayMap = {};\nfor (const [key, val] of Object.entries(heStrs)) {\n  heNoNikud[key] = [Locale.hebrewStripNikkud(val[0])];\n}\nconst poHeNoNikud: LocaleData = {\n  headers: poHe.headers,\n  contexts: {'': heNoNikud},\n} as const;\nLocale.addLocale('he-x-NoNikud', poHeNoNikud);\n"],"names":[],"mappings":"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"}