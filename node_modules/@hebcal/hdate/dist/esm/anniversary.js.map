{"version":3,"file":"anniversary.js","sources":["../../../src/anniversary.ts"],"sourcesContent":["import {\n  hebrew2abs,\n  abs2hebrew,\n  isLeapYear,\n  months,\n  monthsInYear,\n  shortKislev,\n  longCheshvan,\n  SimpleHebrewDate,\n} from './hdateBase';\nimport {abs2greg, greg2abs, isDate} from './greg';\n\nconst NISAN = months.NISAN;\nconst CHESHVAN = months.CHESHVAN;\nconst KISLEV = months.KISLEV;\nconst TEVET = months.TEVET;\nconst SHVAT = months.SHVAT;\nconst ADAR_I = months.ADAR_I;\nconst ADAR_II = months.ADAR_II;\n\n/**\n * Returns true if the object is a SimpleHebrewDate\n * @private\n */\nfunction isSimpleHebrewDate(obj: any): boolean {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    typeof obj.yy === 'number' &&\n    typeof obj.mm === 'number' &&\n    typeof obj.dd === 'number'\n  );\n}\n\nexport type AnniversaryDate = Date | SimpleHebrewDate | number;\n\n/**\n * @private\n */\nfunction toSimpleHebrewDate(obj: AnniversaryDate): SimpleHebrewDate {\n  if (isSimpleHebrewDate(obj)) {\n    return obj as SimpleHebrewDate;\n  } else if (isDate(obj)) {\n    const abs = greg2abs(obj as Date);\n    return abs2hebrew(abs);\n  } else {\n    // typeof obj === 'number'\n    return abs2hebrew(obj as number);\n  }\n}\n\n/**\n * Calculates yahrzeit.\n * `hyear` must be after original `date` of death.\n * Returns `undefined` when requested year preceeds or is same as original year.\n *\n * Hebcal uses the algorithm defined in \"Calendrical Calculations\"\n * by Edward M. Reingold and Nachum Dershowitz.\n *\n * The customary anniversary date of a death is more complicated and depends\n * also on the character of the year in which the first anniversary occurs.\n * There are several cases:\n *\n * * If the date of death is Marcheshvan 30, the anniversary in general depends\n *   on the first anniversary; if that first anniversary was not Marcheshvan 30,\n *   use the day before Kislev 1.\n * * If the date of death is Kislev 30, the anniversary in general again depends\n *   on the first anniversary â€” if that was not Kislev 30, use the day before\n *   Tevet 1.\n * * If the date of death is Adar II, the anniversary is the same day in the\n *   last month of the Hebrew year (Adar or Adar II).\n * * If the date of death is Adar I 30, the anniversary in a Hebrew year that\n *   is not a leap year (in which Adar only has 29 days) is the last day in\n *   Shevat.\n * * In all other cases, use the normal (that is, same month number) anniversary\n *   of the date of death. [Calendrical Calculations p. 113]\n * @example\n * import {getYahrzeit} from '@hebcal/hdate';\n * const dt = new Date(2014, 2, 2); // '2014-03-02' == '30 Adar I 5774'\n * const anniversary = getYahrzeit(5780, dt); // '2/25/2020' == '30 Sh\\'vat 5780'\n * @param hyear Hebrew year\n * @param date Gregorian or Hebrew date of death\n * @returns anniversary occurring in `hyear`\n */\nexport function getYahrzeit(\n  hyear: number,\n  date: AnniversaryDate\n): Date | undefined {\n  const hd = getYahrzeitHD(hyear, date);\n  if (typeof hd === 'undefined') {\n    return hd;\n  }\n  return abs2greg(hebrew2abs(hd.yy, hd.mm, hd.dd));\n}\n\nexport function getYahrzeitHD(\n  hyear: number,\n  date: AnniversaryDate\n): SimpleHebrewDate | undefined {\n  let hDeath = toSimpleHebrewDate(date);\n  if (hyear <= hDeath.yy) {\n    // Hebrew year ${hyear} occurs on or before original date in ${hDeath.yy}\n    return undefined;\n  }\n\n  if (\n    hDeath.mm === CHESHVAN &&\n    hDeath.dd === 30 &&\n    !longCheshvan(hDeath.yy + 1)\n  ) {\n    // If it's Heshvan 30 it depends on the first anniversary;\n    // if that was not Heshvan 30, use the day before Kislev 1.\n    hDeath = abs2hebrew(hebrew2abs(hyear, KISLEV, 1) - 1);\n  } else if (\n    hDeath.mm === KISLEV &&\n    hDeath.dd === 30 &&\n    shortKislev(hDeath.yy + 1)\n  ) {\n    // If it's Kislev 30 it depends on the first anniversary;\n    // if that was not Kislev 30, use the day before Teveth 1.\n    hDeath = abs2hebrew(hebrew2abs(hyear, TEVET, 1) - 1);\n  } else if (hDeath.mm === ADAR_II) {\n    // If it's Adar II, use the same day in last month of year (Adar or Adar II).\n    hDeath.mm = monthsInYear(hyear);\n  } else if (hDeath.mm === ADAR_I && hDeath.dd === 30 && !isLeapYear(hyear)) {\n    // If it's the 30th in Adar I and year is not a leap year\n    // (so Adar has only 29 days), use the last day in Shevat.\n    hDeath.dd = 30;\n    hDeath.mm = SHVAT;\n  }\n  // In all other cases, use the normal anniversary of the date of death.\n\n  // advance day to rosh chodesh if needed\n  if (hDeath.mm === CHESHVAN && hDeath.dd === 30 && !longCheshvan(hyear)) {\n    hDeath.mm = KISLEV;\n    hDeath.dd = 1;\n  } else if (hDeath.mm === KISLEV && hDeath.dd === 30 && shortKislev(hyear)) {\n    hDeath.mm = TEVET;\n    hDeath.dd = 1;\n  }\n\n  hDeath.yy = hyear;\n  return hDeath;\n}\n\n/**\n * Calculates a birthday or anniversary (non-yahrzeit).\n * `hyear` must be after original `date` of anniversary.\n * Returns `undefined` when requested year preceeds or is same as original year.\n *\n * Hebcal uses the algorithm defined in \"Calendrical Calculations\"\n * by Edward M. Reingold and Nachum Dershowitz.\n *\n * The birthday of someone born in Adar of an ordinary year or Adar II of\n * a leap year is also always in the last month of the year, be that Adar\n * or Adar II. The birthday in an ordinary year of someone born during the\n * first 29 days of Adar I in a leap year is on the corresponding day of Adar;\n * in a leap year, the birthday occurs in Adar I, as expected.\n *\n * Someone born on the thirtieth day of Marcheshvan, Kislev, or Adar I\n * has his birthday postponed until the first of the following month in\n * years where that day does not occur. [Calendrical Calculations p. 111]\n * @example\n * import {getBirthdayOrAnniversary} from '@hebcal/hdate';\n * const dt = new Date(2014, 2, 2); // '2014-03-02' == '30 Adar I 5774'\n * const anniversary = getBirthdayOrAnniversary(5780, dt); // '3/26/2020' == '1 Nisan 5780'\n * @param hyear Hebrew year\n * @param date Gregorian or Hebrew date of event\n * @returns anniversary occurring in `hyear`\n */\nexport function getBirthdayOrAnniversary(\n  hyear: number,\n  date: AnniversaryDate\n): Date | undefined {\n  const hd = getBirthdayHD(hyear, date);\n  if (typeof hd === 'undefined') {\n    return hd;\n  }\n  return abs2greg(hebrew2abs(hd.yy, hd.mm, hd.dd));\n}\n\nexport function getBirthdayHD(\n  hyear: number,\n  date: AnniversaryDate\n): SimpleHebrewDate | undefined {\n  const orig = toSimpleHebrewDate(date);\n  const origYear = orig.yy;\n  if (hyear === origYear) {\n    return orig;\n  } else if (hyear < origYear) {\n    // Hebrew year ${hyear} occurs on or before original date in ${origYear}\n    return undefined;\n  }\n  const isOrigLeap = isLeapYear(origYear);\n  let month = orig.mm;\n  let day = orig.dd;\n\n  if ((month === ADAR_I && !isOrigLeap) || (month === ADAR_II && isOrigLeap)) {\n    month = monthsInYear(hyear);\n  } else if (month === CHESHVAN && day === 30 && !longCheshvan(hyear)) {\n    month = KISLEV;\n    day = 1;\n  } else if (month === KISLEV && day === 30 && shortKislev(hyear)) {\n    month = TEVET;\n    day = 1;\n  } else if (\n    month === ADAR_I &&\n    day === 30 &&\n    isOrigLeap &&\n    !isLeapYear(hyear)\n  ) {\n    month = NISAN;\n    day = 1;\n  }\n\n  return {yy: hyear, mm: month, dd: day};\n}\n"],"names":[],"mappings":"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"}