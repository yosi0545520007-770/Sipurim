{"version":3,"file":"dateFormat.js","sources":["../../../src/dateFormat.ts"],"sourcesContent":["import {pad2, pad4} from './pad';\n\nconst _formatters = new Map();\n\n/**\n * @private\n */\nfunction getFormatter(tzid: string): Intl.DateTimeFormat {\n  const fmt = _formatters.get(tzid);\n  if (fmt) return fmt;\n  const f = new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hour12: false,\n    timeZone: tzid,\n  });\n  _formatters.set(tzid, f);\n  return f;\n}\n\nconst dateFormatRegex = /^(\\d+).(\\d+).(\\d+),?\\s+(\\d+).(\\d+).(\\d+)/;\n\n/**\n * Returns a string similar to `Date.toISOString()` but in the\n * timezone `tzid`. Contrary to the typical meaning of `Z` at the end\n * of the string, this is not actually a UTC date.\n */\nexport function getPseudoISO(tzid: string, date: Date): string {\n  const str = getFormatter(tzid).format(date);\n  const m = dateFormatRegex.exec(str);\n  if (m === null) {\n    throw new Error(`Unable to parse formatted string: ${str}`);\n  }\n  let hour = m[4];\n  if (hour === '24') {\n    hour = '00';\n  }\n  m[3] = pad4(parseInt(m[3], 10));\n  return `${m[3]}-${m[1]}-${m[2]}T${hour}:${m[5]}:${m[6]}Z`;\n}\n\n/**\n * Returns number of minutes `tzid` is offset from UTC on date `date`.\n */\nexport function getTimezoneOffset(tzid: string, date: Date): number {\n  const utcStr = getPseudoISO('UTC', date);\n  const localStr = getPseudoISO(tzid, date);\n  const diffMs = new Date(utcStr).getTime() - new Date(localStr).getTime();\n  return Math.ceil(diffMs / 1000 / 60);\n}\n\n/**\n * Returns YYYY-MM-DD in the local timezone\n */\nexport function isoDateString(dt: Date): string {\n  return (\n    pad4(dt.getFullYear()) +\n    '-' +\n    pad2(dt.getMonth() + 1) +\n    '-' +\n    pad2(dt.getDate())\n  );\n}\n"],"names":[],"mappings":";;;AAEA,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE;AAE7B;;AAEG;AACH,SAAS,YAAY,CAAC,IAAY,EAAA;IAChC,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC;AACjC,IAAA,IAAI,GAAG;AAAE,QAAA,OAAO,GAAG;IACnB,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;AACzC,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,KAAK,EAAE,SAAS;AAChB,QAAA,GAAG,EAAE,SAAS;AACd,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,MAAM,EAAE,SAAS;AACjB,QAAA,MAAM,EAAE,SAAS;AACjB,QAAA,MAAM,EAAE,KAAK;AACb,QAAA,QAAQ,EAAE,IAAI;AACf,KAAA,CAAC;AACF,IAAA,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,IAAA,OAAO,CAAC;AACV;AAEA,MAAM,eAAe,GAAG,0CAA0C;AAElE;;;;AAIG;AACG,SAAU,YAAY,CAAC,IAAY,EAAE,IAAU,EAAA;IACnD,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;IAC3C,MAAM,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC;AACnC,IAAA,IAAI,CAAC,KAAK,IAAI,EAAE;AACd,QAAA,MAAM,IAAI,KAAK,CAAC,qCAAqC,GAAG,CAAA,CAAE,CAAC;IAC7D;AACA,IAAA,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AACf,IAAA,IAAI,IAAI,KAAK,IAAI,EAAE;QACjB,IAAI,GAAG,IAAI;IACb;AACA,IAAA,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC/B,IAAA,OAAO,CAAA,EAAG,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,IAAI,CAAA,CAAA,EAAI,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAG;AAC3D;AAEA;;AAEG;AACG,SAAU,iBAAiB,CAAC,IAAY,EAAE,IAAU,EAAA;IACxD,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC;IACxC,MAAM,QAAQ,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC;AACzC,IAAA,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE;IACxE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;AACtC;AAEA;;AAEG;AACG,SAAU,aAAa,CAAC,EAAQ,EAAA;AACpC,IAAA,QACE,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC;QACtB,GAAG;AACH,QAAA,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACvB,GAAG;AACH,QAAA,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;AAEtB;;;;"}