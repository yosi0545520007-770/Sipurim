{"version":3,"file":"MevarchimChodeshEvent.js","sources":["../../../src/MevarchimChodeshEvent.ts"],"sourcesContent":["import {HDate, Locale, months} from '@hebcal/hdate';\nimport {Event, flags} from './event';\nimport {Molad} from './molad';\nimport './locale'; // Adds Hebrew and Ashkenazic translations\n\nconst mevarchimChodeshStr = 'Shabbat Mevarchim Chodesh';\n\n/** Represents Mevarchim haChodesh, the announcement of the new month */\nexport class MevarchimChodeshEvent extends Event {\n  readonly monthName: string;\n  /**\n   * Constructs Mevarchim haChodesh event\n   * @param date Hebrew date event occurs\n   * @param monthName Hebrew month name (not translated)\n   * @param [memo]\n   * @param locale Optional locale name\n   */\n  constructor(date: HDate, monthName: string, memo: string, locale?: string) {\n    super(date, `${mevarchimChodeshStr} ${monthName}`, flags.SHABBAT_MEVARCHIM);\n    this.monthName = Locale.gettext(monthName, locale);\n    if (memo) {\n      this.memo = memo;\n    } else {\n      const hyear = date.getFullYear();\n      const hmonth = date.getMonth();\n      const monNext =\n        hmonth === HDate.monthsInYear(hyear) ? months.NISAN : hmonth + 1;\n      const molad = new Molad(hyear, monNext);\n      this.memo = molad.render('en', {hour12: false});\n    }\n  }\n\n  basename(): string {\n    return this.getDesc();\n  }\n  /**\n   * Returns (translated) description of this event\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  render(locale?: string): string {\n    const monthName0 = Locale.gettext(this.monthName, locale);\n    const monthName = monthName0.replace(/'/g, 'â€™');\n    return Locale.gettext(mevarchimChodeshStr, locale) + ' ' + monthName;\n  }\n  /**\n   * Returns (translated) description of this event\n   * @param [locale] Optional locale name (defaults to active locale).\n   */\n  renderBrief(locale?: string): string {\n    const str = this.render(locale);\n    const space = str.indexOf(' ');\n    return str.substring(space + 1);\n  }\n}\n"],"names":[],"mappings":";;;;;;AAKA,MAAM,mBAAmB,GAAG,2BAA2B;AAEvD;AACM,MAAO,qBAAsB,SAAQ,KAAK,CAAA;AAE9C;;;;;;AAMG;AACH,IAAA,WAAA,CAAY,IAAW,EAAE,SAAiB,EAAE,IAAY,EAAE,MAAe,EAAA;AACvE,QAAA,KAAK,CAAC,IAAI,EAAE,CAAA,EAAG,mBAAmB,CAAA,CAAA,EAAI,SAAS,CAAA,CAAE,EAAE,KAAK,CAAC,iBAAiB,CAAC;QAC3E,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;QAClD,IAAI,IAAI,EAAE;AACR,YAAA,IAAI,CAAC,IAAI,GAAG,IAAI;QAClB;aAAO;AACL,YAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE;AAChC,YAAA,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC9B,MAAM,OAAO,GACX,MAAM,KAAK,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC;YAClE,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC;AACvC,YAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC,CAAC;QACjD;IACF;IAEA,QAAQ,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,OAAO,EAAE;IACvB;AACA;;;AAGG;AACH,IAAA,MAAM,CAAC,MAAe,EAAA;AACpB,QAAA,MAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC;QACzD,MAAM,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;AAC/C,QAAA,OAAO,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC,GAAG,GAAG,GAAG,SAAS;IACtE;AACA;;;AAGG;AACH,IAAA,WAAW,CAAC,MAAe,EAAA;QACzB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAC/B,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;QAC9B,OAAO,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;IACjC;AACD;;;;"}