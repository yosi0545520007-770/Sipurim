/*! @hebcal/core v5.10.1, distributed under GPLv2 https://www.gnu.org/licenses/gpl-2.0.txt */
import { Locale } from '@hebcal/hdate';
import { flags } from './event.js';
import { HolidayEvent } from './HolidayEvent.js';
import './locale.js';

const ykk = 'Yom Kippur Katan';
/** YKK is minor day of atonement on the day preceeding each Rosh Chodesh */
class YomKippurKatanEvent extends HolidayEvent {
    /**
     * @private
     * @param date Hebrew date event occurs
     * @param nextMonthName name of the upcoming month
     */
    constructor(date, nextMonthName) {
        super(date, `${ykk} ${nextMonthName}`, flags.MINOR_FAST | flags.YOM_KIPPUR_KATAN);
        this.nextMonthName = nextMonthName;
        this.memo = `Minor Day of Atonement on the day preceeding Rosh Chodesh ${nextMonthName}`;
    }
    basename() {
        return this.getDesc();
    }
    /**
     * @param [locale] Optional locale name (defaults to active locale).
     */
    render(locale) {
        const monthName0 = Locale.gettext(this.nextMonthName, locale);
        const monthName = monthName0.replace(/'/g, 'â€™');
        return Locale.gettext(ykk, locale) + ' ' + monthName;
    }
    /**
     * @param [locale] Optional locale name (defaults to active locale).
     */
    renderBrief(locale) {
        return Locale.gettext(ykk, locale);
    }
    url() {
        return undefined;
    }
}

export { YomKippurKatanEvent };
//# sourceMappingURL=YomKippurKatanEvent.js.map
