{"version":3,"file":"isAssurBemlacha.js","sources":["../../../src/isAssurBemlacha.ts"],"sourcesContent":["import {HDate} from '@hebcal/hdate';\nimport {Zmanim} from './zmanim';\nimport {Location} from './location';\nimport {getHolidaysOnDate} from './holidays';\nimport {Event, flags} from './event';\n\nconst LIGHT_CANDLES = flags.LIGHT_CANDLES | flags.LIGHT_CANDLES_TZEIS;\n\nfunction isTomorrowShabbosOrYomTov(dow: number, events: Event[]): boolean {\n  if (dow === 5) {\n    return true;\n  }\n  const erev = events.find(ev => ev.getFlags() & LIGHT_CANDLES);\n  if (erev) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if it is <em>Shabbos</em> or if it is a <em>Yom Tov</em> day that has a <em>melacha</em> (work)  prohibition.\n *\n * @return if the day is a <em>Yom Tov</em> that is <em>assur bemlacha</em> or <em>Shabbos</em>\n */\nfunction isTodayAssurBemelacha(dow: number, events: Event[]): boolean {\n  if (dow === 6) {\n    return true;\n  }\n  const chag = events.find(ev => ev.getFlags() & flags.CHAG);\n  if (chag) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Utility method to determine if the date and time has a <em>melacha</em> (work) prohibition.\n * Although there are many opinions on the time of <em>tzais</em>, for simplicity\n * this function uses solar depression of 8.5 degrees.\n *\n * @return `true` if <em>melacha</em> is prohibited or `false` if it is not.\n */\nexport function isAssurBemlacha(\n  currentTime: Date,\n  location: Location,\n  useElevation: boolean\n): boolean {\n  const zmanim = new Zmanim(location, currentTime, useElevation);\n  // erev shabbos, YT or YT sheni and after shkiah\n  const sunset = zmanim.sunset();\n  const sunsetMillis = sunset.getTime();\n  if (isNaN(sunsetMillis)) {\n    throw new Error('Could not determine sunset');\n  }\n  // erev shabbos, YT or YT sheni and after shkiah\n  const il = location.getIsrael();\n  const currentMillis = currentTime.getTime();\n  const hd = new HDate(currentTime);\n  const dow = hd.getDay();\n  const events = getHolidaysOnDate(hd, il) || [];\n  if (isTomorrowShabbosOrYomTov(dow, events) && currentMillis >= sunsetMillis) {\n    return true;\n  }\n  // is shabbos or YT and it is before tzais\n  if (isTodayAssurBemelacha(dow, events)) {\n    const tzais = zmanim.tzeit();\n    const tzaisMillis = tzais.getTime();\n    return currentMillis <= tzaisMillis;\n  }\n  return false;\n}\n"],"names":[],"mappings":";;;;;;AAMA,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,mBAAmB;AAErE,SAAS,yBAAyB,CAAC,GAAW,EAAE,MAAe,EAAA;AAC7D,IAAA,IAAI,GAAG,KAAK,CAAC,EAAE;AACb,QAAA,OAAO,IAAI;IACb;AACA,IAAA,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,aAAa,CAAC;IAC7D,IAAI,IAAI,EAAE;AACR,QAAA,OAAO,IAAI;IACb;AACA,IAAA,OAAO,KAAK;AACd;AAEA;;;;AAIG;AACH,SAAS,qBAAqB,CAAC,GAAW,EAAE,MAAe,EAAA;AACzD,IAAA,IAAI,GAAG,KAAK,CAAC,EAAE;AACb,QAAA,OAAO,IAAI;IACb;AACA,IAAA,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC;IAC1D,IAAI,IAAI,EAAE;AACR,QAAA,OAAO,IAAI;IACb;AACA,IAAA,OAAO,KAAK;AACd;AAEA;;;;;;AAMG;SACa,eAAe,CAC7B,WAAiB,EACjB,QAAkB,EAClB,YAAqB,EAAA;IAErB,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,CAAC;;AAE9D,IAAA,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE;AAC9B,IAAA,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,EAAE;AACrC,IAAA,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;AACvB,QAAA,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC;IAC/C;;AAEA,IAAA,MAAM,EAAE,GAAG,QAAQ,CAAC,SAAS,EAAE;AAC/B,IAAA,MAAM,aAAa,GAAG,WAAW,CAAC,OAAO,EAAE;AAC3C,IAAA,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC;AACjC,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,EAAE;IACvB,MAAM,MAAM,GAAG,iBAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,EAAE;IAC9C,IAAI,yBAAyB,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,aAAa,IAAI,YAAY,EAAE;AAC3E,QAAA,OAAO,IAAI;IACb;;AAEA,IAAA,IAAI,qBAAqB,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE;AACtC,QAAA,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE;AAC5B,QAAA,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,EAAE;QACnC,OAAO,aAAa,IAAI,WAAW;IACrC;AACA,IAAA,OAAO,KAAK;AACd;;;;"}