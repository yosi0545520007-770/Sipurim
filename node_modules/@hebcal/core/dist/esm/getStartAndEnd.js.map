{"version":3,"file":"getStartAndEnd.js","sources":["../../../src/getStartAndEnd.ts"],"sourcesContent":["import {greg2abs, isDate, daysInGregMonth, HDate, months} from '@hebcal/hdate';\nimport {CalOptions} from './CalOptions';\n\nconst TISHREI = months.TISHREI;\n\n/**\n * Gets the R.D. days for a number, Date, or HDate\n * @private\n */\nfunction getAbs(d: Date | HDate | number): number {\n  if (typeof d === 'number') return d;\n  if (isDate(d)) return greg2abs(d as Date);\n  if (HDate.isHDate(d)) return (d as HDate).abs();\n  throw new TypeError(`Invalid date type: ${d}`);\n}\n\nfunction getYear(options: CalOptions): number {\n  if (typeof options.year !== 'undefined') {\n    return Number(options.year);\n  }\n  return options.isHebrewYear\n    ? new HDate().getFullYear()\n    : new Date().getFullYear();\n}\n\n/**\n * Parse options object to determine start & end days\n * @private\n */\nexport function getStartAndEnd(options: CalOptions): number[] {\n  if ((options.start && !options.end) || (options.end && !options.start)) {\n    throw new TypeError('Both options.start and options.end are required');\n  } else if (options.start && options.end) {\n    return [getAbs(options.start), getAbs(options.end)];\n  }\n  const isHebrewYear = Boolean(options.isHebrewYear);\n  const theYear = getYear(options);\n  if (isNaN(theYear)) {\n    throw new RangeError(`Invalid year ${options.year}`);\n  } else if (isHebrewYear && theYear < 1) {\n    throw new RangeError(`Invalid Hebrew year ${theYear}`);\n  }\n  const theMonth = getMonth(options);\n  const numYears = Number(options.numYears) || 1;\n  if (isHebrewYear) {\n    return startEndHebrew(theMonth, theYear, numYears);\n  } else {\n    return startEndGregorian(theMonth, theYear, numYears);\n  }\n}\n\nfunction getMonth(options: CalOptions): number {\n  if (options.month) {\n    if (options.isHebrewYear) {\n      return HDate.monthNum(options.month);\n    } else if (typeof options.month === 'number') {\n      return options.month;\n    }\n  }\n  return NaN;\n}\n\nfunction startEndGregorian(\n  theMonth: number,\n  theYear: number,\n  numYears: number\n): number[] {\n  const gregMonth = theMonth ? theMonth - 1 : 0;\n  const startGreg = new Date(theYear, gregMonth, 1);\n  if (theYear < 100) {\n    startGreg.setFullYear(theYear);\n  }\n  const startAbs = greg2abs(startGreg);\n  let endAbs;\n  if (theMonth) {\n    endAbs = startAbs + daysInGregMonth(theMonth, theYear) - 1;\n  } else {\n    const endYear = theYear + numYears;\n    const endGreg = new Date(endYear, 0, 1);\n    if (endYear < 100) {\n      endGreg.setFullYear(endYear);\n    }\n    endAbs = greg2abs(endGreg) - 1;\n  }\n  return [startAbs, endAbs];\n}\n\nfunction startEndHebrew(\n  theMonth: number,\n  theYear: number,\n  numYears: number\n): number[] {\n  const startDate = new HDate(1, theMonth || TISHREI, theYear);\n  let startAbs = startDate.abs();\n  const endAbs = theMonth\n    ? startAbs + startDate.daysInMonth()\n    : new HDate(1, TISHREI, theYear + numYears).abs() - 1;\n  // for full Hebrew year, start on Erev Rosh Hashana which\n  // is technically in the previous Hebrew year\n  // (but conveniently lets us get candle-lighting time for Erev)\n  if (!theMonth && theYear > 1) {\n    startAbs--;\n  }\n  return [startAbs, endAbs];\n}\n"],"names":[],"mappings":"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"}