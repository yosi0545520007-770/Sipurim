import { useEffect, useState } from 'react'
import { supabase } from '@/lib/supabase'
import { HDate } from '@hebcal/core'
import { Menu, X } from 'lucide-react'

export default function Header() {
  const [logoUrl, setLogoUrl] = useState<string>('')
  const [hebDate, setHebDate] = useState<string>('')
  const [user, setUser] = useState<any>(null)   // ⬅️ משתמש מחובר
  const [open, setOpen] = useState(false)

  // טען לוגו
  useEffect(() => {
    (async () => {
      const { data } = await supabase
        .from('settings')
        .select('value')
        .eq('key', 'site_logo_url')
        .maybeSingle()
      setLogoUrl(data?.value || '/logo.png')
    })()
  }, [])

  // חישוב תאריך עברי
  useEffect(() => {
    try {
      const hd: any = new HDate(new Date())
      const text =
        typeof hd.renderGematriya === 'function'
          ? hd.renderGematriya()
          : hd.render('he')
      setHebDate(text)
    } catch {
      setHebDate('')
    }
  }, [])

  // בדיקת התחברות
  useEffect(() => {
    supabase.auth.getUser().then(({ data }) => {
      setUser(data?.user || null)
    })

    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {
      setUser(session?.user || null)
    })

    return () => {
      listener.subscription.unsubscribe()
    }
  }, [])

  const links = [
    { href: '/about', label: 'אודות' },
    { href: '/stories', label: 'כל הסיפורים' },
    { href: '/drive', label: 'סיפורים ברצף לנסיעה' },
    { href: '/series', label: 'סיפורים בהמשכים' },
    { href: '/ilui', label: 'לעילוי נשמת' },
    { href: '/contact', label: 'צור קשר' },
    { href: '/faq', label: 'שאלות נפוצות' },
  ]

  return (
    <header className="border-b bg-white" dir="rtl">
      <div className="max-w-6xl mx-auto px-4 flex items-center gap-6 h-16">

        {/* לוגו */}
        <a href="/" className="shrink-0 flex items-center">
          <img
            src={logoUrl}
            alt="לוגו האתר"
            className="w-10 h-10 object-contain"
          />
        </a>

        {/* תפריט */}
        <nav className="hidden md:flex items-center gap-5 flex-1">
          {links.map((l) => (
            <a
              key={l.href}
              href={l.href}
              className="text-sm text-gray-700 hover:text-blue-600"
            >
              {l.label}
            </a>
          ))}

          {/* ✅ ניהול – יוצג רק אם יש user */}
          {user && (
            <a
              href="/admin"
              className="text-sm text-gray-700 hover:text-blue-600 font-semibold"
            >
              ניהול
            </a>
          )}
        </nav>

        {/* תאריך עברי */}
        <div className="ml-auto flex items-center gap-3">
          <div className="text-sm text-gray-700 whitespace-nowrap">{hebDate}</div>
          <button
            className="md:hidden p-2 rounded hover:bg-gray-100"
            aria-label={open ? 'סגור תפריט' : 'פתח תפריט'}
            onClick={() => setOpen(v => !v)}
          >
            {open ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
          </button>
        </div>
      </div>
      {open && (
        <div className="md:hidden border-t bg-white">
          <div className="max-w-6xl mx-auto px-4 py-3 flex flex-col gap-3">
            {links.map((l) => (
              <a
                key={l.href}
                href={l.href}
                className="text-gray-700 hover:text-blue-600"
                onClick={() => setOpen(false)}
              >
                {l.label}
              </a>
            ))}
            {user && (
              <a
                href="/admin"
                className="text-gray-700 hover:text-blue-600 font-semibold"
                onClick={() => setOpen(false)}
              >
                ניהול
              </a>
            )}
          </div>
        </div>
      )}
    </header>
  )
}

